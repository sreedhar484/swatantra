{"version":3,"sources":["asserts/Loglogo.svg","components/Header.js","components/Content.js","components/Search.js","components/Login.js","components/ContactDetails.js","components/Register.js","components/NewGroup.js","components/Main.js","components/CustomeTheme.js","App.js","serviceWorker.js","index.js","asserts/Logbackground.svg"],"names":["module","exports","Header","history","useHistory","useDisclosure","isOpen","onOpen","onClose","className","Box","h","w","backgroundColor","d","justifyContent","pl","pr","mt","Image","border","borderRadius","src","Cookie","get","onClick","Text","color","ml","Button","push","Icon","name","size","Drawer","placement","mb","flexDirection","variant","Divider","Content","props","useState","arr","setarr","useEffect","Axios","then","res","data3","data","map","data4","sender","reciever","data1","filter","data2","type","users","slice","_id","includes","userName","catch","err","console","log","mx","idx","key","p","boxShadow","set","JSON","stringify","userImage","fontWeight","Search","setusers","search1","setSearch","px","Input","placeholder","onChange","e","search","target","value","arr1","length","ele","toLowerCase","startsWith","Login","changeHandle","event","setState","btnClick","preventDefault","state","password","post","errorum","errorpm","userId","erroru","errorp","py","fontSize","logbackground","alt","float","onSubmit","this","letterSpacing","FormControl","borderColor","focusBorderColor","FormHelperText","to","fontFamily","width","Component","ContactDetails","userClick","parse","setArr","msg","setmsg","socket","setSocket","editMessage","setEditMessage","groupInfo","setGroupInfo","io","on","messageFromBackEnd","split","Popover","usePortal","zIndex","overflowY","overflowWrap","mr","message","pop","style","height","controls","href","Flex","isRequired","defaultValue","id","emit","PseudoBox","as","chatMessage","onDrop","files","formData","FormData","append","url","getRootProps","getInputProps","_active","_checked","justifySelf","alignSelf","Register","changeHandle1","btnClick1","password1","file","errorpm1","reg","errorp1","logo","NewGroup","groupName","setgroupName","group","setgroup","groupImage","setgroupImage","Checkbox","splice","indexOf","addGroup","Main","Stack","spacing","exact","path","component","textAlign","CustomeTheme","theme","btnBorder","btnBorder1","App","ThemeProvider","ColorModeProvider","CSSReset","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2998dfae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Loglogo.ce822a7a.svg\";","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Icon,\r\n  Image,\r\n  // useColorMode,\r\n  // useTheme,\r\n  Divider,\r\n} from \"@chakra-ui/core\";\r\nimport \"../App.css\";\r\nimport {\r\n  BsList,\r\n  BsBookmark,\r\n  BsPeople,\r\n  BsLock,\r\n  BsPerson,\r\n  BsGear,\r\n  BsPersonPlus,\r\n} from \"react-icons/bs\";\r\nimport { AiOutlineNotification, AiOutlineQuestionCircle } from \"react-icons/ai\";\r\nimport { HiOutlinePhone } from \"react-icons/hi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\n\r\nfunction Header() {\r\n  // const { colorMode, toggleColorMode } = useColorMode();\r\n  const history = useHistory();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <div className=\"header\">\r\n      <Box\r\n        h={[\"50px\", \"50px\", \"50px\", \"80px\"]}\r\n        w=\"100%\"\r\n        backgroundColor=\"#112147\"\r\n      >\r\n        <Box d=\"flex\" justifyContent=\"space-between\" pl=\"20px\" pr=\"10px\">\r\n          <Box mt={[\"10px\", \"10px\", \"10px\", \"20px\"]} d=\"flex\">\r\n            <Image\r\n              w=\"30px\"\r\n              h=\"30px\"\r\n              border=\"1px solid white\"\r\n              borderRadius=\"50%\"\r\n              src={`http://localhost:1234/${Cookie.get(\"userImage\")}`}\r\n              onClick={onOpen}\r\n            />\r\n            <Text color=\"white\" ml={[\"20px\", \"20px\", \"35px\", \"50px\"]}>\r\n              {Cookie.get(\"userName\")}\r\n            </Text>\r\n          </Box>\r\n          <Button\r\n            backgroundColor=\"#112147\"\r\n            mt={[\"5px\", \"5px\", \"5px\", \"25px\"]}\r\n            onClick={() => history.push(\"/search\")}\r\n          >\r\n            <Icon\r\n              name=\"search\"\r\n              color=\"white\"\r\n              size={[\"25px\", \"25px\", \"30px\", \"40px\"]}\r\n            />\r\n          </Button>\r\n        </Box>\r\n        <Drawer\r\n          isOpen={isOpen}\r\n          placement=\"left\"\r\n          onClose={onClose}\r\n          size={[\"xs\", \"sm\", \"lg\", \"xl\"]}\r\n        >\r\n          <DrawerOverlay />\r\n          <DrawerContent>\r\n            <DrawerCloseButton color=\"white\" />\r\n            <DrawerHeader backgroundColor=\"#112147\">\r\n              <Image\r\n                border=\"1px solid white\"\r\n                borderRadius=\"50%\"\r\n                w=\"50px\"\r\n                h=\"50px\"\r\n                src={`http://localhost:1234/${Cookie.get(\"userImage\")}`}\r\n                mb={2}\r\n              />\r\n              <Text color=\"white\">{Cookie.get(\"userName\")}</Text>\r\n              {/* <IconButton\r\n                icon={colorMode === \"light\" ? \"moon\" : \"sun\"}\r\n                onClick={toggleColorMode}\r\n              ></IconButton> */}\r\n            </DrawerHeader>\r\n            <DrawerBody>\r\n              <Box d=\"flex\" flexDirection=\"column\">\r\n                <Button\r\n                  variant=\"unstyled\"\r\n                  d=\"flex\"\r\n                  justifyContent=\"flex-start\"\r\n                  onClick={() => history.push(\"/newgroup\")}\r\n                >\r\n                  <BsPeople />\r\n                  New Group\r\n                </Button>\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <BsLock />\r\n                  New Secret Chat\r\n                </Button>\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <AiOutlineNotification />\r\n                  New Channel\r\n                </Button>\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <BsPerson />\r\n                  Contacts\r\n                </Button>\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <HiOutlinePhone />\r\n                  Calls\r\n                </Button>\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <BsBookmark />\r\n                  Saved Messages\r\n                </Button>\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <BsGear />\r\n                  Settings\r\n                </Button>\r\n                <Divider />\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <BsPersonPlus />\r\n                  Invite Friends\r\n                </Button>\r\n                <Button variant=\"unstyled\" d=\"flex\" justifyContent=\"flex-start\">\r\n                  <AiOutlineQuestionCircle />\r\n                  Faq\r\n                </Button>\r\n              </Box>\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter></DrawerFooter>\r\n          </DrawerContent>\r\n        </Drawer>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Box, Image, Text } from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\nfunction Content(props) {\r\n  const [arr, setarr] = useState([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:1234/user/chat\")\r\n      .then((res) => {\r\n        let data3 = res.data;\r\n        data3 = data3.map((data4) =>\r\n          data4.sender === Cookie.get(\"userName\")\r\n            ? data4.reciever\r\n            : data4.reciever === Cookie.get(\"userName\")\r\n            ? data4.sender\r\n            : \"\"\r\n        );\r\n\r\n        Axios.get(\"http://localhost:1234/user\")\r\n          .then((res) => {\r\n            let data1 = res.data;\r\n            data1 = data1.filter((data) => {\r\n              let data2 =\r\n                data.type === \"group\" ? [...data.users][0].slice(\",\") : [];\r\n              if (data.type === \"user\" && data._id !== Cookie.get(\"userId\")) {\r\n                if (data3.includes(data.userName)) {\r\n                  return true;\r\n                } else {\r\n                  return false;\r\n                }\r\n              } else if (data2.includes(Cookie.get(\"userName\"))) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            });\r\n            setarr(data1);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  return (\r\n    <Box mx=\"10px\" h=\"auto\">\r\n      {arr.map((data, idx) => (\r\n        <Box\r\n          key={idx}\r\n          h=\"60px\"\r\n          d=\"flex\"\r\n          mt=\"10px\"\r\n          p=\"5px\"\r\n          backgroundColor={data.type === \"group\" && \"teal.300\"}\r\n          boxShadow=\" 0 0 7px 2px rgba(0,0,0,0.12)\"\r\n          onClick={() => {\r\n            Cookie.set(\"userClick\", JSON.stringify(data));\r\n            history.push(\"/main/id\");\r\n          }}\r\n        >\r\n          <Image\r\n            border=\"1px solid black\"\r\n            borderRadius=\"50%\"\r\n            w=\"50px\"\r\n            h=\"50px\"\r\n            src={`http://localhost:1234/${data.userImage}`}\r\n          />\r\n          <Box ml={4}>\r\n            <Text fontWeight=\"bold\">{data.userName}</Text>\r\n            <Text>good night</Text>\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\nexport default Content;\r\n","import { Box, Input, Image, Text } from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BsArrowLeftShort } from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\nfunction Search(props) {\r\n  const history = useHistory();\r\n  const [users, setusers] = useState([]);\r\n  const [search1, setSearch] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:1234/user\")\r\n      .then((res) => {\r\n        let data = res.data;\r\n        data = data.filter((data) => data._id !== Cookie.get(\"userId\") && data.type===\"user\");\r\n        setusers(data);\r\n        setSearch(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const onSearch = (e) => {\r\n    let search = e.target.value;\r\n    let arr1 = [];\r\n    if (search.length > 0) {\r\n      arr1 = users.filter((ele) =>\r\n        ele.userName.toLowerCase().startsWith(search.toLowerCase())\r\n      );\r\n      setusers(arr1);\r\n    } else {\r\n      setusers(search1);\r\n    }\r\n  };\r\n  return (\r\n    <Box>\r\n      <Box\r\n        d=\"flex\"\r\n        px=\"10px\"\r\n        justifyContent=\"flex-start\"\r\n        h={[\"50px\", \"50px\", \"50px\", \"80px\"]}\r\n        w=\"100%\"\r\n        backgroundColor=\"#112147\"\r\n      >\r\n        <Box mt=\"10px\">\r\n          <BsArrowLeftShort\r\n            color=\"white\"\r\n            size=\"30px\"\r\n            onClick={() => history.push(\"/main\")}\r\n          />\r\n        </Box>\r\n        <Input\r\n          variant=\"unstyled\"\r\n          ml=\"20px\"\r\n          color=\"white\"\r\n          placeholder=\"Search here\"\r\n          onChange={onSearch}\r\n        />\r\n      </Box>\r\n      <Box mx=\"10px\" h=\"auto\">\r\n        {users.map((data, idx) => (\r\n          <Box\r\n            key={idx}\r\n            h=\"60px\"\r\n            d=\"flex\"\r\n            mt=\"10px\"\r\n            p=\"5px\"\r\n            onClick={() => {\r\n              Cookie.set(\"userClick\", JSON.stringify(data));\r\n              return history.push(\"/main/id\");\r\n            }}\r\n            boxShadow=\" 0 0 7px 2px rgba(0,0,0,0.12)\"\r\n          >\r\n            <Image\r\n              border=\"1px solid black\"\r\n              borderRadius=\"50%\"\r\n              w=\"50px\"\r\n              h=\"50px\"\r\n              src={`http://localhost:1234/${data.userImage}`}\r\n            />\r\n            <Box ml={4}>\r\n              <Text fontWeight=\"bold\">{data.userName}</Text>\r\n              <Text>message</Text>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import logbackground from \"../asserts/Logbackground.svg\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  Input,\r\n  FormControl,\r\n  FormHelperText,\r\n  Text,\r\n  Button,\r\n} from \"@chakra-ui/core\";\r\nimport Cookie from \"js-cookie\";\r\nimport Axios from \"axios\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userName: \"\",\r\n      password: \"\",\r\n      errorum: \"\",\r\n      errorpm: \"\",\r\n      log: false,\r\n      erroru: false,\r\n      errorp: false,\r\n    };\r\n  }\r\n  changeHandle = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  btnClick = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.userName.length !== 0) {\r\n      if (this.state.password.length !== 0) {\r\n        Axios.post(\"http://localhost:1234/login\", {\r\n          userName: this.state.userName,\r\n          password: this.state.password,\r\n        })\r\n          .then((res) => {\r\n            console.log(res);\r\n            if (res.data === \"You don't have a account\") {\r\n              this.setState({ errorum: \"incorrect username\" });\r\n            } else if (res.data === \"Invalid credentials\") {\r\n              this.setState({ errorpm: \"incorrect password\", errorum: \"\" });\r\n            } else {\r\n              this.setState(\r\n                { log: true, errorpm: \"\", userName: \"\", password: \"\" },\r\n                () => {\r\n                  Cookie.set(\"userName\", res.data.userName);\r\n                  Cookie.set(\"userId\", res.data.userId);\r\n                  Cookie.set(\"userImage\", res.data.userImage);\r\n                }\r\n              );\r\n            }\r\n          })\r\n          .catch((err) => console.log(err));\r\n      } else {\r\n        this.setState({ errorpm: \"Please enter password\", errorum: \"\" });\r\n      }\r\n    } else {\r\n      this.setState({ errorum: \"Please enter username\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Box\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        flexDirection={[\"column\", \"column\", \"column\", \"row\"]}\r\n      >\r\n        <Box\r\n          w={[\"100%\", \"100%\", \"100%\", \"64%\"]}\r\n          h={[\"40%\", \"40%\", \"40%\", \"100%\"]}\r\n        >\r\n          <Box\r\n            py={[\"22%\", \"22%\", \"22%\", \"34%\"]}\r\n            px={[\"15%\", \"20%\", \"30%\", \"35%\"]}\r\n          >\r\n            <Text\r\n              fontSize=\"30px\"\r\n              w={[\"244px\", \"244px\", \"244px\", \"349px\"]}\r\n              h={[\"74px\", \"74px\", \"74px\", \"104px\"]}\r\n            >\r\n              NANDU\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          backgroundColor=\"#112147\"\r\n          w={[\"100%\", \"100%\", \"100%\", \"36%\"]}\r\n          h={[\"60%\", \"60%\", \"60%\", \"100%\"]}\r\n          color=\"white\"\r\n        >\r\n          <Box\r\n            h=\"60%\"\r\n            d={[\"none\", \"none\", \"none\", \"flex\"]}\r\n            justifyContent=\"flex-end\"\r\n          >\r\n            <Image src={logbackground} alt=\"background\" float=\"right\"></Image>\r\n          </Box>\r\n          <Box mx={[\"25px\", \"25px\", \"25px\", \"40px\"]}>\r\n            <form onSubmit={this.btnClick}>\r\n              <Text\r\n                fontSize=\"30px\"\r\n                color=\"#7EAACD\"\r\n                fontWeight=\"bold\"\r\n                letterSpacing=\"1.2px\"\r\n                mt=\"20%\"\r\n              >\r\n                LOGIN\r\n              </Text>\r\n              <FormControl mt=\"12%\">\r\n                <Input\r\n                  variant=\"flushed\"\r\n                  type=\"text\"\r\n                  placeholder=\"USER NAME\"\r\n                  name=\"userName\"\r\n                  value={this.state.userName}\r\n                  onChange={this.changeHandle}\r\n                  borderColor={\r\n                    this.state.erroru ? \"crimson\" : \"rgba(255,255,255,0.24)\"\r\n                  }\r\n                  focusBorderColor={this.state.erroru ? \"crimson\" : \"#2A69AC\"}\r\n                ></Input>\r\n                <FormHelperText color=\"red.500\">\r\n                  {this.state.errorum}\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl mt=\"14%\">\r\n                <Input\r\n                  type=\"password\"\r\n                  variant=\"flushed\"\r\n                  placeholder=\"PASSWORD\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.changeHandle}\r\n                  borderColor={\r\n                    this.state.errorp ? \"crimson\" : \"rgba(255,255,255,0.24)\"\r\n                  }\r\n                  focusBorderColor={this.state.errorp ? \"crimson\" : \"#2A69AC\"}\r\n                ></Input>\r\n                <FormHelperText color=\"red.500\">\r\n                  {this.state.errorpm}\r\n                </FormHelperText>\r\n              </FormControl>\r\n              {this.state.log ? (\r\n                <Redirect to=\"/main\" />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  mt=\"14%\"\r\n                  backgroundColor=\"white\"\r\n                  fontFamily=\"Rubik-Regular\"\r\n                  fontSize=\"18px\"\r\n                  color=\"#112147\"\r\n                  borderRadius=\"4px\"\r\n                  width=\"114px\"\r\n                  h=\"44px\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              )}\r\n            </form>\r\n            <Link to=\"/register\">\r\n              <Text mb=\"16%\">Don't have an account</Text>\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BsArrowLeftShort, BsCameraVideo, BsVolumeMute } from \"react-icons/bs\";\r\nimport {\r\n  AiOutlineMore,\r\n  AiOutlineDelete,\r\n  AiOutlineSearch,\r\n} from \"react-icons/ai\";\r\nimport { AiOutlineSend, AiOutlineAudio } from \"react-icons/ai\";\r\nimport { GrAttachment, GrEmoji } from \"react-icons/gr\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Button,\r\n  Input,\r\n  PseudoBox,\r\n  Flex,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/core\";\r\nimport { HiOutlinePhone } from \"react-icons/hi\";\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n} from \"@chakra-ui/core\";\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\nimport \"../App.css\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nfunction ContactDetails(props) {\r\n  const history = useHistory();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const userClick = JSON.parse(Cookie.get(\"userClick\"));\r\n  const [arr, setArr] = useState([]);\r\n  const [msg, setmsg] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [editMessage, setEditMessage] = useState(\"\");\r\n  const [groupInfo, setGroupInfo] = useState([]);\r\n  useEffect(() => {\r\n    setSocket(io(\"http://localhost:1234\"));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket !== null) {\r\n      socket.on(\"Output Chat Message\", (messageFromBackEnd) => {\r\n        if (userClick.type === \"user\") {\r\n          let data = messageFromBackEnd;\r\n          data = data.filter(\r\n            (data) =>\r\n              data.sender === Cookie.get(\"userName\") ||\r\n              data.reciever === Cookie.get(\"userName\")\r\n          );\r\n          data = data.filter(\r\n            (data) =>\r\n              data.sender === userClick.userName ||\r\n              data.reciever === userClick.userName\r\n          );\r\n          setArr(data);\r\n        } else {\r\n          let data = messageFromBackEnd;\r\n          data = data.filter((data) => data.reciever === userClick.userName);\r\n          setArr(data);\r\n        }\r\n      });\r\n    } else {\r\n      Axios.get(\"http://localhost:1234/user/chat\")\r\n        .then((res) => {\r\n          if (userClick.type === \"user\") {\r\n            let data = res.data;\r\n            data = data.filter(\r\n              (data) =>\r\n                data.sender === Cookie.get(\"userName\") ||\r\n                data.reciever === Cookie.get(\"userName\")\r\n            );\r\n            data = data.filter(\r\n              (data) =>\r\n                data.sender === userClick.userName ||\r\n                data.reciever === userClick.userName\r\n            );\r\n            setArr(data);\r\n          } else {\r\n            let data = res.data;\r\n            data = data.filter((data) => data.reciever === userClick.userName);\r\n            setArr(data);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n      Axios.get(\"http://localhost:1234/user\")\r\n        .then((res) => {\r\n          let data1 = res.data.filter(\r\n            (data) =>\r\n              data.type === \"user\" &&\r\n              userClick.users[0].split(\",\").includes(data.userName)\r\n          );\r\n          setGroupInfo(data1);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [socket]);\r\n  const onDrop = (files) => {\r\n    console.log(files);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", files[0]);\r\n    Axios.post(\"http://localhost:1234/user/uploadfiles\", formData).then(\r\n      (res) => {\r\n        console.log(res.data);\r\n        socket.emit(\"Input Chat Message\", {\r\n          chatMessage: res.data.url,\r\n          type: \"file\",\r\n          sender: Cookie.get(\"userName\"),\r\n          reciever: userClick.userName,\r\n        });\r\n      }\r\n    );\r\n  };\r\n  const changeHandle = (event) => {\r\n    setmsg(event.target.value);\r\n  };\r\n  const editMsg = (id) => {\r\n    socket.emit(\"edit chat message\", {\r\n      id: id,\r\n      message: editMessage,\r\n    });\r\n    setEditMessage(\"\");\r\n  };\r\n  const deleteMsg = (id) => {\r\n    socket.emit(\"delete chat message\", {\r\n      id: id,\r\n    });\r\n  };\r\n  // const deleteMsgOne = (data1) => {\r\n  //   let data = Cookie.get(\"userName\") === data1.sender?\"sender\":\"reciever\"\r\n  //     socket.emit(\"delete chat one message\", {\r\n  //       id: data1._id,\r\n  //       data:data\r\n  //     });\r\n  // };\r\n  const onSend = () => {\r\n    socket.emit(\"Input Chat Message\", {\r\n      chatMessage: msg,\r\n      type: \"text\",\r\n      sender: Cookie.get(\"userName\"),\r\n      reciever: userClick.userName,\r\n    });\r\n    setmsg(\"\");\r\n  };\r\n  return (\r\n    <Box>\r\n      <div className=\"header\">\r\n        <Box\r\n          d=\"flex\"\r\n          px=\"10px\"\r\n          justifyContent=\"space-between\"\r\n          h={[\"50px\", \"50px\", \"50px\", \"80px\"]}\r\n          w=\"100%\"\r\n          backgroundColor=\"#112147\"\r\n        >\r\n          <Box d=\"flex\" justifyContent=\"flex-start\">\r\n            <Box mt={[\"10px\", \"10px\", \"10px\", \"20px\"]}>\r\n              <BsArrowLeftShort\r\n                color=\"white\"\r\n                size=\"30px\"\r\n                onClick={() => history.push(\"/main\")}\r\n              />\r\n            </Box>\r\n            <Box\r\n              h=\"50px\"\r\n              d=\"flex\"\r\n              p=\"5px\"\r\n              mt={[\"0px\", \"0px\", \"0px\", \"10px\"]}\r\n              onClick={onOpen}\r\n            >\r\n              <Image\r\n                border=\"1px solid white\"\r\n                borderRadius=\"50%\"\r\n                w=\"40px\"\r\n                h=\"40px\"\r\n                src={`http://localhost:1234/${userClick.userImage}`}\r\n              />\r\n              <Box ml={4}>\r\n                <Text fontWeight=\"bold\" color=\"white\">\r\n                  {userClick.userName}\r\n                </Text>\r\n                <Text color=\"white\">online</Text>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box mt={[\"5px\", \"5px\", \"5px\", \"10px\"]}>\r\n            <Popover placement=\"left-start\" usePortal>\r\n              <PopoverTrigger>\r\n                <Button backgroundColor=\"#112147\">\r\n                  <AiOutlineMore color=\"white\" size=\"30px\" />\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent zIndex={99} w=\"200px\">\r\n                <PopoverArrow />\r\n                <PopoverBody mt=\"30px\">\r\n                  <Box d=\"flex\" flexDirection=\"column\">\r\n                    <Button\r\n                      variant=\"unstyled\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"flex-start\"\r\n                    >\r\n                      <HiOutlinePhone />\r\n                      Call\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"unstyled\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"flex-start\"\r\n                    >\r\n                      <BsCameraVideo />\r\n                      Video Call\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"unstyled\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"flex-start\"\r\n                    >\r\n                      <AiOutlineSearch />\r\n                      Search\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"unstyled\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"flex-start\"\r\n                    >\r\n                      Clear Chat\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"unstyled\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"flex-start\"\r\n                    >\r\n                      <AiOutlineDelete />\r\n                      Delete Chat\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"unstyled\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"flex-start\"\r\n                    >\r\n                      <BsVolumeMute />\r\n                      Mute Notificatoions\r\n                    </Button>\r\n                  </Box>\r\n                </PopoverBody>\r\n              </PopoverContent>\r\n            </Popover>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n      <Box\r\n        border=\"1px solid green.500\"\r\n        w=\"100%\"\r\n        h=\"auto\"\r\n        overflowY=\"scroll\"\r\n        mt=\"10px\"\r\n        mb={[\"50px\", \"50px\", \"60px\", \"70px\"]}\r\n      >\r\n        {arr.map((data, idx) => (\r\n          <Box\r\n            d=\"flex\"\r\n            key={idx}\r\n            h=\"auto\"\r\n            w=\"80%\"\r\n            mx=\"5px\"\r\n            overflowWrap=\"break-word\"\r\n            backgroundColor=\"teal.300\"\r\n            float={data.sender === Cookie.get(\"userName\") ? \"right\" : \"left\"}\r\n            justifyContent={\r\n              data.sender === Cookie.get(\"userName\")\r\n                ? \"flex-end\"\r\n                : \"space-between\"\r\n            }\r\n            mb=\"10px\"\r\n          >\r\n            {data.type === \"text\" ? (\r\n              <Text mr={2}>{data.message}</Text>\r\n            ) : (\r\n              <Text>\r\n                {data.message.split(\".\").pop() === \"jpg\" ||\r\n                data.message.split(\".\").pop() === \"jpeg\" ||\r\n                data.message.split(\".\").pop() === \"png\" ? (\r\n                  <Image\r\n                    width=\"100%\"\r\n                    alt=\"img\"\r\n                    src={`http://localhost:1234/${data.message}`}\r\n                  />\r\n                ) : data.message.split(\".\").pop() === \"mp4\" ||\r\n                  data.message.split(\".\").pop() === \"mkv\" ||\r\n                  data.message.split(\".\").pop() === \"web\" ? (\r\n                  <video\r\n                    style={{ width: \"100%\", height: \"200px\" }}\r\n                    src={`http://localhost:1234/${data.message}`}\r\n                    alt=\"video\"\r\n                    type=\"video/mp4\"\r\n                    controls\r\n                  />\r\n                ) : data.message.split(\".\").pop() === \"mp3\" ||\r\n                  data.message.split(\".\").pop() === \"mpeg\" ||\r\n                  data.message.split(\".\").pop() === \"ogg\" ? (\r\n                  <video\r\n                    style={{ width: \"100%\" }}\r\n                    src={`http://localhost:1234/${data.message}`}\r\n                    type=\"audio/mpeg\"\r\n                    controls\r\n                  />\r\n                ) : (\r\n                  <a href={`http://localhost:1234/${data.message}`}>download</a>\r\n                )}\r\n              </Text>\r\n            )}\r\n            <Text\r\n              mr={2}\r\n              d={\r\n                data.sender !== Cookie.get(\"userName\") &&\r\n                userClick.type !== \"user\"\r\n                  ? \"flex\"\r\n                  : \"none\"\r\n              }\r\n            >\r\n              {data.sender}\r\n            </Text>\r\n            {data.type === \"text\" ? (\r\n              <Popover placement=\"left-start\" usePortal>\r\n                <PopoverTrigger>\r\n                  <Button>+</Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent zIndex={4} w=\"200px\">\r\n                  <PopoverArrow />\r\n                  <PopoverBody>\r\n                    <Box d=\"flex\" flexDirection=\"column\">\r\n                      <Flex>\r\n                        <Input\r\n                          variant=\"flushed\"\r\n                          placeholder=\"enter msg\"\r\n                          isRequired\r\n                          defaultValue={data.message}\r\n                          onChange={(e) => setEditMessage(e.target.value)}\r\n                        />\r\n                        <Button\r\n                          variant=\"unstyled\"\r\n                          d=\"flex\"\r\n                          justifyContent=\"flex-start\"\r\n                          onClick={() => editMsg(data._id)}\r\n                        >\r\n                          edit\r\n                        </Button>\r\n                      </Flex>\r\n                      {/* <Button\r\n                      variant=\"unstyled\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"flex-start\"\r\n                      onClick={() => deleteMsgOne(data)}\r\n                    >\r\n                      delete\r\n                    </Button> */}\r\n                      <Button\r\n                        variant=\"unstyled\"\r\n                        d=\"flex\"\r\n                        justifyContent=\"flex-start\"\r\n                        onClick={() => deleteMsg(data._id)}\r\n                      >\r\n                        delete for everyone\r\n                      </Button>\r\n                    </Box>\r\n                  </PopoverBody>\r\n                </PopoverContent>\r\n              </Popover>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <div className=\"footer\">\r\n        <Box\r\n          h={[\"40px\", \"40px\", \"50px\", \"60px\"]}\r\n          px=\"10px\"\r\n          backgroundColor=\"#E2E8F0\"\r\n          color=\"black\"\r\n          d=\"flex\"\r\n        >\r\n          <Box py=\"5px\">\r\n            <GrEmoji size=\"30px\" />\r\n          </Box>\r\n          <Input\r\n            name=\"chatMessage\"\r\n            ml=\"3px\"\r\n            variant=\"unstyled\"\r\n            backgroundColor=\"#E2E8F0\"\r\n            color=\"black\"\r\n            placeholder=\"Type here\"\r\n            value={msg}\r\n            onChange={changeHandle}\r\n          />\r\n          <Box>\r\n            {msg ? (\r\n              <PseudoBox py=\"5px\" d=\"flex\" as={Button} onClick={onSend}>\r\n                <AiOutlineSend size=\"25px\" />\r\n              </PseudoBox>\r\n            ) : (\r\n              <Box d=\"flex\">\r\n                <Dropzone onDrop={onDrop}>\r\n                  {({ getRootProps, getInputProps }) => (\r\n                    <section>\r\n                      <div {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <Button\r\n                          variant=\"unstyled\"\r\n                          _active=\"none\"\r\n                          _checked=\"none\"\r\n                        >\r\n                          <GrAttachment\r\n                            size=\"25px\"\r\n                            _active=\"none\"\r\n                            _checked=\"none\"\r\n                          />\r\n                        </Button>\r\n                      </div>\r\n                    </section>\r\n                  )}\r\n                </Dropzone>\r\n\r\n                <AiOutlineAudio size=\"25px\" />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"bottom\"\r\n        onClose={onClose}\r\n        size={[\"xs\", \"sm\", \"lg\", \"xl\"]}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton color=\"white\" />\r\n          <DrawerHeader\r\n            backgroundColor=\"#112147\"\r\n            d=\"flex\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <Image\r\n              borderRadius=\"50%\"\r\n              w=\"100px\"\r\n              h=\"100px\"\r\n              justifySelf=\"center\"\r\n              alignSelf=\"center\"\r\n              src={`http://localhost:1234/${userClick.userImage}`}\r\n              mb={2}\r\n            />\r\n            <Text color=\"white\" justifySelf=\"center\" alignSelf=\"center\">\r\n              {userClick.userName}\r\n            </Text>\r\n          </DrawerHeader>\r\n          <DrawerBody>\r\n            <Box h=\"auto\">\r\n              {groupInfo.map((data, idx) => (\r\n                <Box\r\n                  key={idx}\r\n                  h=\"60px\"\r\n                  d=\"flex\"\r\n                  mt=\"10px\"\r\n                  p=\"5px\"\r\n                  backgroundColor={data.type === \"group\" && \"teal.300\"}\r\n                  boxShadow=\" 0 0 7px 2px rgba(0,0,0,0.12)\"\r\n                >\r\n                  <Image\r\n                    border=\"1px solid black\"\r\n                    borderRadius=\"50%\"\r\n                    w=\"50px\"\r\n                    h=\"50px\"\r\n                    src={`http://localhost:1234/${data.userImage}`}\r\n                  />\r\n                  <Box ml={4}>\r\n                    <Text fontWeight=\"bold\">{data.userName}</Text>\r\n                    <Text>admin</Text>\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </DrawerBody>\r\n          <DrawerFooter></DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n}\r\nexport default ContactDetails;\r\n","import logo from \"../asserts/Loglogo.svg\";\r\nimport logbackground from \"../asserts/Logbackground.svg\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  Input,\r\n  FormControl,\r\n  FormHelperText,\r\n  Text,\r\n  Button,\r\n} from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userName: \"\",\r\n      password: \"\",\r\n      password1: \"\",\r\n      erroru: false,\r\n      errorp: false,\r\n      errorp1: false,\r\n      errorum: \"\",\r\n      errorpm: \"\",\r\n      errorpm1: \"\",\r\n      reg: false,\r\n      file: null,\r\n    };\r\n  }\r\n  changeHandle = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value})\r\n  };\r\n  changeHandle1 = (event) => {\r\n    this.setState({ [event.target.name]: event.target.files[0] });\r\n  };\r\n  btnClick1 = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.userName.length !== 0) {\r\n      if (this.state.password.length !== 0) {\r\n        if (this.state.password1.length !== 0) {\r\n          const formData = new FormData();\r\n          formData.append(\"userName\", this.state.userName);\r\n          formData.append(\"pwd1\", this.state.password);\r\n          formData.append(\"pwd2\", this.state.password1);\r\n          formData.append(\"users\", null);\r\n          formData.append(\"type\", \"user\");\r\n          formData.append(\"userImage\", this.state.file);\r\n          console.log(formData)\r\n          Axios.post(\"http://localhost:1234/register\",formData)\r\n            .then((res) => {\r\n              console.log(res.data);\r\n              if (res.data === \"Password doesn't match\") {\r\n                this.setState({\r\n                  errorpm1: \"incorrect username\",\r\n                  errorum: \"\",\r\n                  errorpm: \"\",\r\n                  userName: \"\",\r\n                  password: \"\",\r\n                  password1: \"\",\r\n                });\r\n              } else {\r\n                this.setState({ reg: true, errorpm1: \"\" });\r\n              }\r\n            })\r\n            .catch((err) => console.log(err));\r\n        } else {\r\n          this.setState({ errorpm1: \"Please confirm password\", errorpm: \"\" });\r\n        }\r\n      } else {\r\n        this.setState({ errorpm: \"Please enter password\", errorum: \"\" });\r\n      }\r\n    } else {\r\n      this.setState({ errorum: \"Please enter username\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Box\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        flexDirection={[\"column\", \"column\", \"column\", \"row\"]}\r\n      >\r\n        <Box\r\n          w={[\"100%\", \"100%\", \"100%\", \"64%\"]}\r\n          h={[\"40%\", \"40%\", \"40%\", \"100%\"]}\r\n        >\r\n          <Box\r\n            py={[\"22%\", \"22%\", \"22%\", \"34%\"]}\r\n            px={[\"15%\", \"20%\", \"30%\", \"35%\"]}\r\n          >\r\n            <Image\r\n              src={logo}\r\n              alt=\"logo\"\r\n              w={[\"244px\", \"244px\", \"244px\", \"349px\"]}\r\n              h={[\"74px\", \"74px\", \"74px\", \"104px\"]}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          backgroundColor=\"#112147\"\r\n          w={[\"100%\", \"100%\", \"100%\", \"36%\"]}\r\n          h={[\"60%\", \"60%\", \"60%\", \"100%\"]}\r\n          color=\"white\"\r\n        >\r\n          <Box\r\n            h=\"60%\"\r\n            d={[\"none\", \"none\", \"none\", \"flex\"]}\r\n            justifyContent=\"flex-end\"\r\n          >\r\n            <Image src={logbackground} alt=\"background\" float=\"right\"></Image>\r\n          </Box>\r\n          <Box mx={[\"25px\", \"25px\", \"25px\", \"40px\"]}>\r\n            <form onSubmit={this.btnClick1}>\r\n              <Text\r\n                fontSize=\"30px\"\r\n                // fontFamily=\"NotoSansJP-Bold\"\r\n                color=\"#7EAACD\"\r\n                fontWeight=\"bold\"\r\n                letterSpacing=\"1.2px\"\r\n                mt=\"20%\"\r\n              >\r\n                REGISTER\r\n              </Text>\r\n              <FormControl mt=\"6%\">\r\n                <Input\r\n                  variant=\"flushed\"\r\n                  type=\"text\"\r\n                  placeholder=\"USER NAME\"\r\n                  name=\"userName\"\r\n                  value={this.state.userName}\r\n                  onChange={this.changeHandle}\r\n                  borderColor={\r\n                    this.state.erroru ? \"crimson\" : \"rgba(255,255,255,0.24)\"\r\n                  }\r\n                  focusBorderColor={this.state.erroru ? \"crimson\" : \"#2A69AC\"}\r\n                ></Input>\r\n                <FormHelperText color=\"red.500\">\r\n                  {this.state.errorum}\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl mt=\"7%\">\r\n                <Input\r\n                  type=\"password\"\r\n                  variant=\"flushed\"\r\n                  placeholder=\"PASSWORD\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.changeHandle}\r\n                  borderColor={\r\n                    this.state.errorp ? \"crimson\" : \"rgba(255,255,255,0.24)\"\r\n                  }\r\n                  focusBorderColor={this.state.errorp ? \"crimson\" : \"#2A69AC\"}\r\n                ></Input>\r\n                <FormHelperText color=\"red.500\">\r\n                  {this.state.errorpm}\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl mt=\"7%\">\r\n                <Input\r\n                  type=\"password\"\r\n                  variant=\"flushed\"\r\n                  placeholder=\"CONFIRM PASSWORD\"\r\n                  name=\"password1\"\r\n                  value={this.state.password1}\r\n                  onChange={this.changeHandle}\r\n                  borderColor={\r\n                    this.state.errorp1 ? \"crimson\" : \"rgba(255,255,255,0.24)\"\r\n                  }\r\n                  focusBorderColor={this.state.errorp1 ? \"crimson\" : \"#2A69AC\"}\r\n                ></Input>\r\n                <FormHelperText color=\"red.500\">\r\n                  {this.state.errorpm1}\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <Input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                variant=\"flushed\"\r\n                backgroundColor=\"#112147\"\r\n                onChange={this.changeHandle1}\r\n              />\r\n              {this.state.reg ? (\r\n                <Redirect to=\"/\" />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  mt=\"14%\"\r\n                  backgroundColor=\"white\"\r\n                  fontFamily=\"Rubik-Regular\"\r\n                  fontSize=\"18px\"\r\n                  color=\"#112147\"\r\n                  borderRadius=\"4px\"\r\n                  width=\"114px\"\r\n                  h=\"44px\"\r\n                >\r\n                  REGISTER\r\n                </Button>\r\n              )}\r\n            </form>\r\n            <Link to=\"/\">\r\n              <Text mb=\"16%\">Already have an account</Text>\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import { Box, Input, Image, Text, Button, Checkbox, PseudoBox, Flex } from \"@chakra-ui/core\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { BsArrowLeftShort } from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\nimport \"../App.css\"\r\nfunction NewGroup() {\r\n    const history = useHistory();\r\n    const [users, setusers] = useState([]);\r\n    const [search1, setSearch] = useState([]);\r\n    const [groupName, setgroupName] = useState(\"\")\r\n    const [group, setgroup] = useState([])\r\n    const [groupImage, setgroupImage] = useState(null)\r\n    console.log(group)\r\n    useEffect(() => {\r\n      setgroup([...group, Cookie.get(\"userName\")]);\r\n      Axios.get(\"http://localhost:1234/user\")\r\n        .then((res) => {\r\n          let data = res.data;\r\n          data = data.filter((data) => data.userName !== Cookie.get(\"userName\"));\r\n          data = data.filter((data)=>data.type!==\"group\");\r\n          setusers(data);\r\n          setSearch(data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }, []);\r\n    const onSearch = (e) => {\r\n      let search = e.target.value;\r\n      let arr1 = [];\r\n      if (search.length > 0) {\r\n        arr1 = users.filter((ele) =>\r\n          ele.userName.toLowerCase().startsWith(search.toLowerCase())\r\n        );\r\n        setusers(arr1);\r\n      } else {\r\n        setusers(search1);\r\n      }\r\n    };\r\n    const addGroup = (id)=>{\r\n      let data = [...group];\r\n        if(data.includes(id)){\r\n            data.splice(data.indexOf(id),1);\r\n            setgroup(data)\r\n        }\r\n        else{\r\n           setgroup([...group, id]); \r\n        }\r\n    }\r\n    const groupAdd=()=>{\r\n      const formData = new FormData();\r\n      formData.append(\"userName\", groupName);\r\n      formData.append(\"pwd1\", null);\r\n      formData.append(\"users\", group);\r\n      formData.append(\"type\", \"group\");\r\n      formData.append(\"userImage\", groupImage);\r\n        Axios.post(\"http://localhost:1234/register\",formData).then(res=>{console.log(res);history.push(\"/main\")});\r\n    }\r\n    return (\r\n      <Box>\r\n        <Box\r\n          d=\"flex\"\r\n          px=\"10px\"\r\n          justifyContent=\"flex-start\"\r\n          h={[\"50px\", \"50px\", \"50px\", \"80px\"]}\r\n          w=\"100%\"\r\n          backgroundColor=\"#112147\"\r\n        >\r\n          <Box mt=\"10px\">\r\n            <BsArrowLeftShort\r\n              color=\"white\"\r\n              size=\"30px\"\r\n              onClick={() => history.push(\"/main\")}\r\n            />\r\n          </Box>\r\n          <Input\r\n            variant=\"unstyled\"\r\n            ml=\"20px\"\r\n            color=\"white\"\r\n            placeholder=\"Search here\"\r\n            onChange={onSearch}\r\n          />\r\n        </Box>\r\n        <Input type=\"file\" onChange={(e) => setgroupImage(e.target.files[0])} />\r\n        <Box\r\n          d=\"flex\"\r\n          pr=\"10px\"\r\n          justifyContent=\"flex-start\"\r\n          h={[\"50px\", \"50px\", \"50px\", \"80px\"]}\r\n          w=\"100%\"\r\n        >\r\n          <Input\r\n            variant=\"flushed\"\r\n            ml=\"20px\"\r\n            placeholder=\"Enter Group Name\"\r\n            onChange={(e) => setgroupName(e.target.value)}\r\n          />\r\n          <Button onClick={groupAdd}>Create</Button>\r\n        </Box>\r\n\r\n        <Box mx=\"10px\" h=\"auto\">\r\n          {users.map((data, idx) => (\r\n            <PseudoBox\r\n              as={Checkbox}\r\n              key={idx}\r\n              h=\"60px\"\r\n              mt=\"10px\"\r\n              d=\"flex\"\r\n              name={data.userName}\r\n              p=\"5px\"\r\n              boxShadow=\" 0 0 7px 2px rgba(0,0,0,0.12)\"\r\n              onChange={(e) => addGroup(e.target.name)}\r\n            >\r\n              <Image\r\n                border=\"1px solid black\"\r\n                borderRadius=\"50%\"\r\n                w=\"50px\"\r\n                h=\"50px\"\r\n                src={`http://localhost:1234/${data.userImage}`}\r\n              />\r\n              <Box ml={4}>\r\n                <Text fontWeight=\"bold\">{data.userName}</Text>\r\n                <Text>message</Text>\r\n              </Box>\r\n            </PseudoBox>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    );\r\n}\r\n\r\nexport default NewGroup\r\n","import { Box, Stack, Text } from \"@chakra-ui/core\";\r\nimport React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Content from \"./Content\";\r\nimport Search from \"./Search\";\r\nimport Login from \"./Login\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport ContactDetails from \"./ContactDetails\";\r\nimport Register from \"./Register\";\r\n// import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewGroup from \"./NewGroup\";\r\nfunction Main() {\r\n  return (\r\n    <Box>\r\n      <Stack spacing={8}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n            <Route exact path=\"/main\">\r\n              <Header />\r\n              <Content />\r\n            </Route>\r\n            <Route exact path=\"/search\">\r\n              <Search />\r\n            </Route>\r\n            <Route exact path=\"/main/id\">\r\n              <ContactDetails />\r\n            </Route>\r\n            <Route exact path=\"/newgroup\">\r\n              <NewGroup/>\r\n            </Route>\r\n            <Route\r\n              path=\"*\"\r\n              component={() => (\r\n                <Text\r\n                  textAlign=\"center\"\r\n                  color=\"red.500\"\r\n                  fontSize={[\"30px\", \"30px\", \"35px\", \"40px\"]}\r\n                >\r\n                  404 Page Not Found\r\n                </Text>\r\n              )}\r\n            ></Route>\r\n          </Switch>\r\n        </Router>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { theme } from \"@chakra-ui/core\";\r\nconst CustomeTheme = {\r\n  ...theme,\r\n  btnBorder: {\r\n    backgroundColor: \"red.500\",\r\n    border: \"1px solid #112147\",\r\n    color: \"#112147\",\r\n  },\r\n  btnBorder1: {\r\n    backgroundColor: \"blue.500\",\r\n    border: \"1px solid #112147\",\r\n    color: \"#112147\",\r\n  },\r\n};\r\nexport default CustomeTheme;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Main from \"./components/Main\";\nimport { ThemeProvider, CSSReset, ColorModeProvider } from \"@chakra-ui/core\";\nimport CustomeTheme from \"./components/CustomeTheme\";\nfunction App() {\n  return (\n    <ThemeProvider theme={CustomeTheme}>\n      <ColorModeProvider>\n        <CSSReset />\n        <Main />\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logbackground.f8115f95.svg\";"],"sourceRoot":""}